// This file is generated by build.rs
include!(concat!(env!("OUT_DIR"), "/stmt.gen.rs"));

use crate::expr::ExprErr;

pub type StmtRes = Result<Stmt, ExprErr>;

// Function info: lots of stuff, so carry it around Rc'd.
pub struct Function {
	pub name: Token,

	// Functions have an identity; methods do not.
	pub identity: Option<VarRef>,
	pub param_count: u32,
	pub local_count: u32,

	pub captured: Vec<VarRef>,

	/// Reference to the "this" var if the function references it. 
	/// Used to implement the "this" optimization.
	pub this: Option<VarRef>,

	pub body: Vec<Stmt>,
}

impl Function {
	pub fn is_method(&self) -> bool {
		// Hack: For now, whether or not we have an identity corresponds to whether
		// we are a method. Methods don't have identity.
		return self.identity.is_none()
	}

	pub fn is_initializer(&self) -> bool {
		// Methods named 'init' are initializers.
		return self.is_method() && self.name.lexeme == "init";
	}
}

pub struct Class {
	pub name: Token,
	pub methods: Vec<Function>,
	pub superclass: Option<VarRef>,
	pub identity: VarRef,
}