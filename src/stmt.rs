// This file is generated by build.rs
include!(concat!(env!("OUT_DIR"), "/stmt.gen.rs"));

use std::{collections::HashSet, rc::Rc};

use crate::expr::ExprErr;

pub type StmtRes = Result<Stmt, ExprErr>;

// Function info: lots of stuff, so carry it around Rc'd.
pub struct Function {
	pub name: Token,

	// Functions have an identity; methods do not.
	pub identity: Option<VarRef>,
	pub vars: HashSet<VarRef>,
	pub param_count: u32,
	pub local_count: u32,

	pub captured: Vec<VarRef>,

	pub body: Vec<Stmt>,
	pub is_initializer: bool,
}

impl Function {
	pub fn empty_init() -> Function {
		return Function {
			name: Token::new(TokenType::Identifier, "init".into(), LoxValue::Nil, 0),

			identity: None, // This is a method which doesn't have identity
			vars: HashSet::new(),
			param_count: 0,
			local_count: 0,

			captured: vec![],

			body: vec![],

			// TODO: Do we want/need this flag?
			is_initializer: true
		};
	}
}

pub struct Class {
	pub name: Token,
	pub methods: Vec<Function>,
	pub superclass: Option<VarRef>,
	pub identity: VarRef,
}